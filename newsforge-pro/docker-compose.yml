version: '3.8'

services:
  # FastAPI 백엔드
  backend:
    build:
      context: .
      dockerfile: infrastructure/docker/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/newsforge
    depends_on:
      - redis
      - postgres
    volumes:
      - ./backend:/app
      - backend_temp:/tmp/newsforge_temp
      - backend_output:/tmp/newsforge_output
    networks:
      - newsforge-network
    restart: unless-stopped

  # Redis (캐시 및 작업 큐)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - newsforge-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # PostgreSQL (데이터베이스)
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=newsforge
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - newsforge-network
    restart: unless-stopped

  # Nginx (리버스 프록시)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./infrastructure/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
    networks:
      - newsforge-network
    restart: unless-stopped

  # 모니터링 (선택사항)
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - newsforge-network
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:
  prometheus_data:
  backend_temp:
  backend_output:

networks:
  newsforge-network:
    driver: bridge 